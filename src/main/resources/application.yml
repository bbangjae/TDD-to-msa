spring:
  application:
    name: TDD
  profiles:
    active: local
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /swagger
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
  api-docs:
    groups:
      enabled: true

jwt:
  access:
    secret: ${JWT_ACCESS_SECRET}
    expiration: ${JWT_ACCESS_EXPIRED}
  refresh:
    secret: ${JWT_REFRESH_SECRET}
    expiration: ${JWT_REFRESH_EXPIRED}

ai:
  google:
    api-key: ${GOOGLE_API_KEY}

naver:
  client:
    id: ${NAVER_CLIENT_ID}
    secret: ${NAVER_CLIENT_SECRET}

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5433/tdd-db
    username: test
    password: password
    driver-class-name: org.postgresql.Driver

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false

logging:
  level:
    root: INFO
    org.hibernate.SQL: OFF
    org.hibernate.type.descriptor.sql.BasicBinder: OFF

---
spring:
  config:
    activate:
      on-profile: test
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: false

jwt:
  access:
    secret: testAccessSecrettestAccessSecret
    expiration: 2000
  refresh:
    secret: testRefreshSecrettestRefreshSecret
    expiration: 2000

ai:
  google:
    api-key: testApiKey

naver:
  client:
    id: ${NAVER_CLIENT_ID}
    secret: ${NAVER_CLIENT_SECRET}